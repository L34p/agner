#!/usr/bin/env python

import glob
import imp
import os
import subprocess
from argparse import ArgumentParser

ROOT = os.path.dirname(os.path.realpath(__file__))
TESTS = sorted([os.path.splitext(os.path.basename(x))[0] for x in glob.glob(os.path.join(ROOT, 'tests', '*.py'))])

parser = ArgumentParser(description='Test various microarchitecture parameters')
parser.add_argument('test', nargs='+', help='run test TEST', metavar='TEST', 
        choices=TESTS + ['all'])

if __name__ == "__main__":
    args = parser.parse_args()
    if not os.path.exists("/dev/MSRdrv"):
        print "The performance counter driver is not loaded; attempting to build and install."
        print "This will require superuser privileges; sudo will be called."
        driver_dir = os.path.join(ROOT, "src", "driver")
        subprocess.check_call(["make"], cwd=driver_dir)
        subprocess.check_call(['sudo', './install.sh'], cwd=driver_dir)
        
    tests = set(args.test)
    if 'all' in tests: tests = set(TESTS)
    for test in tests:
        test_module = imp.load_source(test, os.path.join(ROOT, 'tests', test + ".py"))
        test_module.run_tests()
